\documentclass[a4paper,10pt]{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2cm,bmargin=2.5cm,lmargin=2cm,rmargin=2cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\usepackage{booktabs}

<<constants, include=FALSE>>=
clusterizations.to.analyze <- "clusterizations-to-analyze.csv"
schema.similarities <- "schema-similarities.csv"
base.size <- 8
input.file.names <- read.csv(clusterizations.to.analyze,stringsAsFactors=FALSE)
@

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
opts_chunk$set(fig.path='figure/report-', fig.align='center', fig.show='hold',
               tidy=FALSE, size="small", dev="pdf", dpi=100, echo=FALSE, cache=FALSE)
options(replace.assign=TRUE,width=90)
library(xtable)
library(ggplot2)
library(data.table)
@



\title{Schema Clusterization -- Report}


%\author{Yuri Pirola}
\author{}

\date{\today}

\maketitle



<<def.function.process.clusterization>>=
process.clusterization <- function(schema.similarity.fn, input.filename.row) {
  clusters <- read.csv(input.filename.row$Filename)
  colnames(clusters) <- c("Cluster ID", "Schema ID", "Schema Name", "No. of Entities")
  max.cl.id <- max(clusters$`Cluster ID`)
  ndig.cl.id <- ceiling(log10(max.cl.id))
  simil <- read.csv(schema.similarity.fn, check.names=FALSE, row.names=1)
  simil <- simil[c(-1),] # remove no. of entities
  #for (i in 1:nrow(simil)) {
  #  simil[i, i] <- 1.0
  #}
  perm <- match(clusters$`Schema Name`, colnames(simil))
  simil <- simil[perm, perm]
  colnames(simil) <- paste(formatC(clusters$`Cluster ID`, width=ndig.cl.id, flag="0"), colnames(simil))
  rownames(simil) <- paste(formatC(clusters$`Cluster ID`, width=ndig.cl.id, flag="0"), rownames(simil))
  simil.temp <- simil
  simil.temp$`Schema Name 1` <- rownames(simil.temp)
  rownames(simil.temp) <- NULL
  simil.m <- melt(simil.temp, id.vars="Schema Name 1", variable_name="Schema Name 2")
  simil.m$`Cl.ID.1` <- as.integer(substr(simil.m$`Schema Name 1`, 1, ndig.cl.id))
  simil.m$`Cl.ID.2` <- as.integer(substr(simil.m$`Schema Name 2`, 1, ndig.cl.id))
  simil.m$`Schema Name 1` <- as.character(simil.m$`Schema Name 1`)
  simil.m$`Schema Name 2` <- as.character(simil.m$`Schema Name 2`)
  simil.cl <- data.table(simil.m)
  simil.cl$`Schema Name 1` <- as.character(simil.cl$`Schema Name 1`)
  simil.cl$`Schema Name 2` <- as.character(simil.cl$`Schema Name 2`)
  simil.cl <- simil.cl[Cl.ID.1==Cl.ID.2 & `Schema Name 1`<`Schema Name 2`,]
  simil.cl <- simil.cl[,list(`Cluster ID`=Cl.ID.1,
                             `Schema Name 1`=`Schema Name 1`,
                             `Schema Name 2`=`Schema Name 2`,
                             `Similarity`=value)]
  cluster.data <- simil.cl[,
                           list(`Total Similarity`=sum(Similarity),
                                `Average Similarity`=mean(Similarity)),
                           by=`Cluster ID`]
#  cluster.data$`Cluster ID` <-
#    as.integer(levels(cluster.data$`Cluster ID`)[cluster.data$`Cluster ID`])
  setkeyv(cluster.data, "Cluster ID")

  cluster.entities <- data.table(clusters)[,
                                           list(`No. of Entities`=sum(`No. of Entities`),
                                                `No. of Schemas`=.N),
                                           by=`Cluster ID`]
  setkeyv(cluster.entities, "Cluster ID")

  cluster.data <- cluster.data[cluster.entities]

  class(cluster.data) <- "data.frame"
  colnames(cluster.data) <- c("Cluster ID",
                              "Total Similarity",
                              "Average Similarity",
                              "No. of Entities",
                              "No. of Schemas")
  cluster.data <- cluster.data[,c(1,5,4,3,2)]
  cluster.limits <- cumsum(cluster.data$`No. of Schemas`)
  process.similarities <- list(clusters=clusters,
                               cluster.data=cluster.data,
                               cluster.limits=cluster.limits,
                               simil.m=simil.m)
}
@ 

<<def.function.plot.similarities>>=
plot.clusterization.similarities <- function(s.data) {
  simil.m <- s.data[["simil.m"]]
  cluster.data <- s.data[["cluster.data"]]
  cluster.limits <- s.data[["cluster.limits"]]
  p <- (  ggplot(simil.m, aes(`Schema Name 1`, `Schema Name 2`))
        + geom_tile(aes(fill=value))
        + scale_fill_gradient(low = "white", high="black")
        )
  p <- (  p
        + theme_grey(base_size = base.size)
        + labs(x = "", y = "")
        + scale_x_discrete(expand = c(0, 0))
        + scale_y_discrete(expand = c(0, 0))
        + opts(legend.position = "none",
               axis.ticks = theme_blank(),
               axis.text.x = theme_text(
                 size = base.size * 0.8,
                 angle = -90, hjust = 0,
                 colour = "grey20"),
               axis.text.y = theme_text(
                 size = base.size * 0.8,
                 angle = 0, hjust = 0,
                 colour = "grey20")
               )
        )
  cluster.limits.prev <- c(0, cluster.limits[1:length(cluster.limits)-1])
  cluster.limits.coords <- data.frame(clc=c(0, cluster.limits))
  cluster.centers <- data.frame(clc=((cluster.limits + cluster.limits.prev) / 2),
                                lab=format(cluster.data$`Total Similarity`, digits=3))
  limits.colour <- "gray50"
  text.colour <- "gray20"
  p <- (  p
        + geom_step(data=cluster.limits.coords,
                    aes(x=clc+0.5,y=clc+0.5),
                    colour=limits.colour, direction="hv")
        + geom_step(data=cluster.limits.coords,
                    aes(x=clc+0.5,y=clc+0.5),
                    colour=limits.colour, direction="vh")
        )
  p <- (  p
        + geom_text(data=cluster.centers,
                    aes(x=clc+0.5,
                        y=clc+0.5,
                        label=lab),
                    size=3.5, colour=text.colour, angle=45)
        )
  plot.clusterization.similarities <- p
}
@ 

<<print-input-files, results='asis'>>=
print(xtable(input.file.names[,c(1,2)],
             caption="Clusterizations considered"),
      sanitize.text.function = function(x){x},
      include.rownames=FALSE,
      booktabs=TRUE)
@


<<compute-similarities>>=
s.data <- vector("list", nrow(input.file.names))
for (i in 1:nrow(input.file.names)) {
  s.data[[i]] <- process.clusterization(schema.similarities, input.file.names[i,])
}
@ 

<<plot-similarities, fig.show='asis', fig.cap=paste("Clusterization similarities --", input.file.names$Description)>>=
for (i in 1:nrow(input.file.names)) {
  p <- plot.clusterization.similarities(s.data[[i]])
  print(p)
}
@

<<print-cluster-compositions, results='asis'>>=
for (i in 1:nrow(input.file.names)) {
  print(xtable(s.data[[i]]$clusters[,c(1,3,4)],
               caption=paste("Composition of the clusters --",
                 input.file.names$Description[i])),
        hline.after=c(-1,0,s.data[[i]]$cluster.limits),
        include.rownames=FALSE)
  cluster.data <- s.data[[i]]$cluster.data
  cluster.data <- rbind(cluster.data,
                        data.frame(`Cluster ID`="Total",
                                   `No. of Schemas`=sum(cluster.data$`No. of Schemas`),
                                   `No. of Entities`=sum(cluster.data$`No. of Entities`),
                                   `Average Similarity`=NA,
                                   `Total Similarity`=sum(cluster.data$`Total Similarity`),
                                   check.names=FALSE)
                        )
  print(xtable(cluster.data,
               digits=4,
               caption=paste("Characteristics of the clusters  --",
                 input.file.names$Description[i])),
        hline.after=c(-1,0,nrow(cluster.data)-1,nrow(cluster.data)),
        include.rownames=FALSE, floating=TRUE)
}
@


\end{document}
